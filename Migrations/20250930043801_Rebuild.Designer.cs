// <auto-generated />
using System;
using CalorieCalc.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalorieCalc.Migrations
{
    [DbContext(typeof(FoodContext))]
    [Migration("20250930043801_Rebuild")]
    partial class Rebuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalorieCalc.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CalBurned")
                        .HasColumnType("float");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("HeartRate")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            ExerciseId = -1,
                            CalBurned = 0.0,
                            Duration = 0.0,
                            ExerciseName = "Nothing",
                            HeartRate = 0,
                            UserId = -1
                        });
                });

            modelBuilder.Entity("CalorieCalc.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<double>("Carbs")
                        .HasColumnType("float");

                    b.Property<double>("Cholesterol")
                        .HasColumnType("float");

                    b.Property<double>("Fats")
                        .HasColumnType("float");

                    b.Property<int>("FoodServing")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Protein")
                        .HasColumnType("float");

                    b.Property<double>("Sodium")
                        .HasColumnType("float");

                    b.Property<int?>("UserFoodsUserFoodId")
                        .HasColumnType("int");

                    b.HasKey("FoodId");

                    b.HasIndex("MealId");

                    b.HasIndex("UserFoodsUserFoodId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            Calories = 180,
                            Carbs = 0.0,
                            Cholesterol = 100.0,
                            Fats = 2.0,
                            FoodServing = 170,
                            MealId = 3,
                            Name = "Chicken Breast",
                            Protein = 39.0,
                            Sodium = 110.0
                        },
                        new
                        {
                            FoodId = 2,
                            Calories = 679,
                            Carbs = 0.0,
                            Cholesterol = 196.0,
                            Fats = 48.0,
                            FoodServing = 251,
                            MealId = 3,
                            Name = "Steak",
                            Protein = 62.0,
                            Sodium = 146.0
                        },
                        new
                        {
                            FoodId = 3,
                            Calories = 140,
                            Carbs = 29.0,
                            Cholesterol = 0.0,
                            Fats = 2.5,
                            FoodServing = 39,
                            MealId = 1,
                            Name = "Cheerios",
                            Protein = 5.0,
                            Sodium = 190.0
                        },
                        new
                        {
                            FoodId = 4,
                            Calories = 103,
                            Carbs = 12.0,
                            Cholesterol = 12.0,
                            Fats = 2.3999999999999999,
                            FoodServing = 244,
                            MealId = 1,
                            Name = "1% Milk",
                            Protein = 8.0,
                            Sodium = 107.0
                        },
                        new
                        {
                            FoodId = 5,
                            Calories = 283,
                            Carbs = 64.0,
                            Cholesterol = 0.0,
                            Fats = 0.29999999999999999,
                            FoodServing = 369,
                            MealId = 3,
                            Name = "Potato (Large)",
                            Protein = 7.0,
                            Sodium = 22.0
                        },
                        new
                        {
                            FoodId = 6,
                            Calories = 50,
                            Carbs = 10.0,
                            Cholesterol = 0.0,
                            Fats = 0.5,
                            FoodServing = 148,
                            MealId = 3,
                            Name = "Broccoli",
                            Protein = 4.2000000000000002,
                            Sodium = 49.0
                        },
                        new
                        {
                            FoodId = 7,
                            Calories = 245,
                            Carbs = 48.0,
                            Cholesterol = 0.0,
                            Fats = 1.5,
                            FoodServing = 98,
                            MealId = 1,
                            Name = "Bagel",
                            Protein = 10.0,
                            Sodium = 430.0
                        },
                        new
                        {
                            FoodId = 8,
                            Calories = 82,
                            Carbs = 22.0,
                            Cholesterol = 0.0,
                            Fats = 0.20000000000000001,
                            FoodServing = 165,
                            MealId = 4,
                            Name = "Pineapple",
                            Protein = 0.90000000000000002,
                            Sodium = 2.0
                        },
                        new
                        {
                            FoodId = 9,
                            Calories = 206,
                            Carbs = 45.0,
                            Cholesterol = 0.0,
                            Fats = 0.40000000000000002,
                            FoodServing = 158,
                            MealId = 2,
                            Name = "White Rice",
                            Protein = 4.2999999999999998,
                            Sodium = 2.0
                        },
                        new
                        {
                            FoodId = 10,
                            Calories = 160,
                            Carbs = 18.0,
                            Cholesterol = 22.0,
                            Fats = 9.0,
                            FoodServing = 32,
                            MealId = 4,
                            Name = "Chocolate Chip Cookie",
                            Protein = 1.8,
                            Sodium = 110.0
                        });
                });

            modelBuilder.Entity("CalorieCalc.Models.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MealId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            MealId = 1,
                            MealType = "Breakfast"
                        },
                        new
                        {
                            MealId = 2,
                            MealType = "Lunch"
                        },
                        new
                        {
                            MealId = 3,
                            MealType = "Dinner"
                        },
                        new
                        {
                            MealId = 4,
                            MealType = "Snack"
                        });
                });

            modelBuilder.Entity("CalorieCalc.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<double?>("CalReq")
                        .HasColumnType("float");

                    b.Property<double?>("CarbReq")
                        .HasColumnType("float");

                    b.Property<double?>("ChReq")
                        .HasColumnType("float");

                    b.Property<double?>("FatReq")
                        .HasColumnType("float");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<double?>("ProteinReq")
                        .HasColumnType("float");

                    b.Property<double?>("SodiumReq")
                        .HasColumnType("float");

                    b.Property<int>("UserHeight")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("UserWeight")
                        .HasColumnType("float");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = -1,
                            Age = 25,
                            Gender = "M",
                            UserHeight = 175,
                            UserName = "John Doe",
                            UserWeight = 90.0
                        },
                        new
                        {
                            UserId = -2,
                            Age = 25,
                            Gender = "F",
                            UserHeight = 161,
                            UserName = "Jane Doe",
                            UserWeight = 77.0
                        });
                });

            modelBuilder.Entity("CalorieCalc.Models.UserFoods", b =>
                {
                    b.Property<int>("UserFoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int?>("UserFoodsUserFoodId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserFoodId");

                    b.HasIndex("FoodId");

                    b.HasIndex("UserFoodsUserFoodId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFoods");

                    b.HasData(
                        new
                        {
                            UserFoodId = 2,
                            FoodId = 1,
                            UserId = -1
                        });
                });

            modelBuilder.Entity("CalorieCalc.Models.Exercise", b =>
                {
                    b.HasOne("CalorieCalc.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CalorieCalc.Models.Food", b =>
                {
                    b.HasOne("CalorieCalc.Models.Meal", "Meal")
                        .WithMany("Foods")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CalorieCalc.Models.UserFoods", null)
                        .WithMany("foods")
                        .HasForeignKey("UserFoodsUserFoodId");
                });

            modelBuilder.Entity("CalorieCalc.Models.UserFoods", b =>
                {
                    b.HasOne("CalorieCalc.Models.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CalorieCalc.Models.UserFoods", null)
                        .WithMany("userfoods")
                        .HasForeignKey("UserFoodsUserFoodId");

                    b.HasOne("CalorieCalc.Models.User", "User")
                        .WithMany("UserFoods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
